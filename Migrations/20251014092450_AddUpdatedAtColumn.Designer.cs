// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using promotion_net.Data;

#nullable disable

namespace promotion_net.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251014092450_AddUpdatedAtColumn")]
    partial class AddUpdatedAtColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("promotion_net.Models.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c8e179d-b338-4e45-b653-75cab476d9cd"),
                            Code = "P001",
                            CreatedAt = new DateTime(2025, 10, 14, 9, 24, 50, 338, DateTimeKind.Utc).AddTicks(407),
                            Description = "Điện thoại iPhone 16 Pro mới nhất với nhiều tính năng vượt trội.",
                            IsActive = true,
                            Name = "iPhone 16 Pro",
                            Price = 100.00m,
                            UpdatedAt = new DateTime(2025, 10, 14, 9, 24, 50, 338, DateTimeKind.Utc).AddTicks(373)
                        },
                        new
                        {
                            Id = new Guid("9707a95d-d9a2-4a35-b3cf-4c3c61ff6049"),
                            Code = "P002",
                            CreatedAt = new DateTime(2025, 10, 14, 9, 24, 50, 338, DateTimeKind.Utc).AddTicks(411),
                            Description = "Điện thoại Samsung Galaxy S24 Ultra với camera chất lượng cao.",
                            IsActive = true,
                            Name = "Samsung Galaxy S24 Ultra",
                            Price = 90.00m,
                            UpdatedAt = new DateTime(2025, 10, 14, 9, 24, 50, 338, DateTimeKind.Utc).AddTicks(408)
                        },
                        new
                        {
                            Id = new Guid("576bf573-1228-48cb-8fda-635afe73721e"),
                            Code = "P003",
                            CreatedAt = new DateTime(2025, 10, 14, 9, 24, 50, 338, DateTimeKind.Utc).AddTicks(425),
                            Description = "Điện thoại Google Pixel 8 Pro với trải nghiệm Android thuần túy.",
                            IsActive = true,
                            Name = "Google Pixel 8 Pro",
                            Price = 80.00m,
                            UpdatedAt = new DateTime(2025, 10, 14, 9, 24, 50, 338, DateTimeKind.Utc).AddTicks(412)
                        });
                });

            modelBuilder.Entity("promotion_net.Models.PromotionProducts.PromotionProduct", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId", "PromotionId");

                    b.HasIndex("PromotionId");

                    b.ToTable("PromotionProducts");
                });

            modelBuilder.Entity("promotion_net.Models.Promotions.Promotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Promotions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c0e7e430-1487-4e5e-a5a8-c62f9d019e65"),
                            Code = "PROMO10",
                            Description = "Giảm giá 10% cho tất cả các sản phẩm trong dịp lễ.",
                            DiscountPercent = 10m,
                            EndDate = new DateTime(2025, 11, 14, 9, 24, 50, 338, DateTimeKind.Utc).AddTicks(470),
                            IsActive = true,
                            Name = "Giảm giá 10%",
                            StartDate = new DateTime(2025, 10, 14, 9, 24, 50, 338, DateTimeKind.Utc).AddTicks(470)
                        },
                        new
                        {
                            Id = new Guid("2a13c33f-3423-4308-aebc-246f5e3c731a"),
                            Code = "PROMO20",
                            Description = "Giảm giá 20% cho các sản phẩm điện thoại cao cấp.",
                            DiscountPercent = 20m,
                            EndDate = new DateTime(2025, 11, 14, 9, 24, 50, 338, DateTimeKind.Utc).AddTicks(493),
                            IsActive = true,
                            Name = "Giảm giá 20%",
                            StartDate = new DateTime(2025, 10, 14, 9, 24, 50, 338, DateTimeKind.Utc).AddTicks(492)
                        },
                        new
                        {
                            Id = new Guid("02c4575c-55eb-4fa0-9ab7-bce1db7b9d17"),
                            Code = "WELCOME15",
                            Description = "Chào mừng bạn mới đến với cửa hàng, giảm giá 15% cho đơn hàng đầu tiên.",
                            DiscountPercent = 15m,
                            EndDate = new DateTime(2025, 11, 14, 9, 24, 50, 338, DateTimeKind.Utc).AddTicks(496),
                            IsActive = true,
                            Name = "Giảm giá 15%",
                            StartDate = new DateTime(2025, 10, 14, 9, 24, 50, 338, DateTimeKind.Utc).AddTicks(496)
                        });
                });

            modelBuilder.Entity("promotion_net.Models.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69f4bb8c-b971-414e-aee6-4e23a174d456"),
                            CreatedAt = new DateTime(2025, 10, 14, 9, 24, 50, 336, DateTimeKind.Utc).AddTicks(5455),
                            Email = "nguyenhiengiabao12@gmail.com",
                            FullName = "Nguyen Hien Gia Bao",
                            IsActive = true,
                            PasswordHash = "$2a$11$mTxeE3o2LfOux54IHDzx0eafJLXDrcHYXDI80z23TZd1Umf6qyCtS",
                            PhoneNumber = "0123456789",
                            Role = 0
                        });
                });

            modelBuilder.Entity("promotion_net.Models.PromotionProducts.PromotionProduct", b =>
                {
                    b.HasOne("promotion_net.Models.Products.Product", "Product")
                        .WithMany("PromotionProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("promotion_net.Models.Promotions.Promotion", "Promotion")
                        .WithMany("PromotionProducts")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("promotion_net.Models.Products.Product", b =>
                {
                    b.Navigation("PromotionProducts");
                });

            modelBuilder.Entity("promotion_net.Models.Promotions.Promotion", b =>
                {
                    b.Navigation("PromotionProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
